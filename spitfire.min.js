!function(e,t){if("object"==typeof exports){var r={Observable:require("rxjs/Observable").Observable,BehaviorSubject:require("rxjs/BehaviorSubject").BehaviorSubject};require("rxjs/add/observable/combineLatest"),module.exports=t(r)}else"function"==typeof define&&define.amd?define("spitfire",["rxjs"],t):e.spitfire=t(e.Rx)}(this,function(e){function t(e){if(!(this instanceof t))throw new TypeError("Cannot call class Model as as function");var r=void 0!==e,n="object"==typeof e&&null!==e;if(r){if(!n)throw new TypeError("Model source must be an object");Object.keys(e).reduce(function(t,r){return t[r]=e[r],t},this)}}function r(t,r){var n=new e.BehaviorSubject(t[r]);return Object.defineProperty(t,r,{configurable:!1,get:function(){return n.value},set:function(e){n.next(e)}}),n.asObservable()}return t.transform=function(t){if("object"!=typeof t||null===t)throw new TypeError("Cannot transform a non-object into a model");var n=Object.keys(t).filter(function(e){return"function"!=typeof t[e]}),o=n.reduce(function(e,t){return e[t]=null,e},{}),i=n.map(function(e){return r(t,e)}).concat(function(){var e=Array.prototype.slice.call(arguments).reduce(function(e,t,r){return e[n[r]]=t,e},{}),t={prev:o,next:e};return o=e,t}),u=e.Observable.combineLatest.apply(null,i);return Object.defineProperty(t,"state$",{value:u}),Object.freeze(t)},Object.defineProperty(t.prototype,"state$",{get:function(){if(this instanceof t)return t.transform(this).state$}}),{Model:t}});
//# sourceMappingURL=spitfire.min.js.map